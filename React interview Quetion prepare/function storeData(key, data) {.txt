function storeData(key, data) {

 sessionStorage.setItem(key, JSON.stringify(data));

}

function  getData(key) {
   return JOSN.parse(sessionStorage.getItem(key) || 'null');

}

function removeData(key) {

sessionStorage.removeItem(key);
}








Parse the data with JSOS.parse() and the becomes a javascript object
//// Sending  Data  

If you have data stored in javascript object, you can convert the object
into JSON, and send it to a server

const myObje = { name: 'john, age: 31, city: 'New York'};

const myJSON = JOSN.stringify(myObj);

const myObj1 = JSON.parse(myJSON)
window.location = 'demo_json.php?=' + myJSON

////  Reciving Data 

If you receive data in JSON format, you can easily convert it into javascript


'{"name": 'john', 'age':30, "car": null}'

What is JSON 

JSON stands for javascript Object Notation
JSON is a lightWeight data-interchange format
JSON is plain text writtent in javascript object notation
JSON is use to send data between object computer
JSON is language independedt 

JavaScript has a built in funciton for converiing  JSON  stirngs into
into Javascript objects 

JSON.parse()

Javascript  also has built in funcion for converting an object into
a JSON stirng	`
JSON.stringify()



// Storing data

const myobj = {name:'john', age: 31, city: 'new York'};
const myJSON = JSON.stringify(myobj);
localStorage.setItem('testJSON',myJSON);

/// Retrieving data

let text = localStorage.getItem('testJSON');

let obj = JSON.parse(text);

/////////////////////

1) How to pass data between sibling componnets using React router

      app
       |
  cont      Search
   |
item 
 
2)  What is React ?

-React is a front-end javascript  Libray devlepd by Facebook in 2011
-it follow the component based approach which helps in buliding
resuable UI components...........
-- It is used for developing complex and interacitve web and mobile UI
 

using react we cand devlped web and mobile UI

  
React divides the UI into multiple componets, which makes the code easeir
to debug and each component has its own property and function	


1) what are closures 

-- A closure is the combination of a function and the lexical envirmonemtn
with in which that function was declared

i.e, it an inner function that has access to outer or enclosing funciton's



function Welcome(name) {
     var greetingInfo = function (message) {
     console.log(message + " " + name)
     };
      return greetingInfo;
}

var MyFunction = Welcome('john')

myFunction('Welcome');
MyFunction ('Hello Mr.')


As per the above code, the inneer function(i.e, greeetinginfo) 
has access to the varibales int the outer function

scope(i.e welcome) event after the outer function has returned




//  What is Hoisting      

Hoisting is a javascript mechnaism where varibles,  function declarations
and classes are moved to the top of their scope before code execution

Remeber that javascript only hoists declariton, not initilastion......

Les't take a simple example of variable hoisting...........


console.log(message) // output : undefined 
var message = 'The variable has been hoisted'

The above code looks like as below to the interpreter 

var message;
console.log(message);

message = 'The variable Has been hoisted';









1) what is a cookie 

A cookie is piece of data that is stored on your computer to be accessed by
your brower Cookes are saved as key/values pairs. For
example you can a cookie named userName as below      

document.cookie ='userName = jon'

1) What is a promise ?

A promise is an object that may produce a single value 
some time in the future with either a resolved value or 
a reason that it's not resovle (for exmaple, network errror)

It will be in  one of the 3 possible states 

fulfilled , rejected or pending 

const Promise = new Promise (function (resovle, reject) {
  /// promise description
})


The usage of promise would be as below, 

const promise = new







5)  Why do you need a promise ?

Promise are used to handle asnchronous operation ...

They provide an alternative for callbacks by reducing the callback hell
and writing the cleaner code




6) What is a callback function ?

A callback function is a function passed into anohter function as an 
argument . This function is invoked inside the outer function to 
complete an action Lets take a simple exmaple of how to use callback
function


function callbackFunction(name) {
  console.log('Hello' + name);
}

function outerFunction(callback) {
  let name = promt('please enter your name');
   callback(name);

}

outerFunction(callbackFunction);


5) Why do we need callbacks

The callbacks are needed because javascript is an event driven language.
That means instead of waiting for a response javascript will keep 
executing while lisening for other events. Let's take an exmaple
with the first function invling an Api call(simulated by setTimeout)
and the next function which logs the message 


function firstFunction() {
  // Simulate a code dely 

  setTimeout(function() {
    console.log('first function called');
  }, 1000);

  function secondFunction () {
    console.log('second function called')
  }

  firstFunction()
  secondFunction()

 }







169) Browsers provide an XMLHttpRequest Object which can be used 
to make synchornous HTTP requests from   javascript 


function httpGet(theUrl) {
 var xmlHttReq = new XMLHttpRequest()
 xmlHttReq.open('GET', theUrl, false); //false for synchornous request
 xmlHttReq.send(null);
 return XmlHttReq.responsText; 
  
}


170) How do you make asynchronous HTTp request 

Browsers provide an ZMLHttpRequest object which can be used to make
asynchornous HTTp request from javascipt by passong 3 rd parametr as true



































































